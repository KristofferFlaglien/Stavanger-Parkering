# This workflow triggers when code is pushed to the main branch
name: Deploy to Databricks Prod

on:
  push:
    branches:
      - main  # Only run when pushing to main branch (production deployments)

jobs:
  deploy:
    runs-on: ubuntu-latest  # Use GitHub's Ubuntu virtual machine
    permissions:
      contents: write  # Allow this workflow to write to the repository (needed for git tags)
    env:
      # Load secrets from GitHub repository settings
      DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}    # Your Databricks workspace URL
      DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}  # Your personal access token

    steps:
      # STEP 1: Get the code from your repository
      - uses: actions/checkout@v3

      # STEP 2: Install the Databricks command-line tool
      - name: Install Databricks CLI
        run: pip install --upgrade databricks-cli databricks-sdk

      # STEP 3: Configure the Databricks CLI with your credentials
      - name: Configure Databricks CLI
        run: |
          cat > ~/.databrickscfg << EOF
          [DEFAULT]
          host = ${{ secrets.DATABRICKS_HOST }}
          token = ${{ secrets.DATABRICKS_TOKEN }}
          EOF

      # STEP 4: Deploy your Databricks bundle
      - name: Deploy Databricks bundle
        run: |
          # The `bundle deploy` command is now the unified way to deploy all assets
          databricks bundle deploy --target prod

      # STEP 5: Create a git tag to mark this deployment
      - name: Create Git tag for release
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git tag "prod-deploy-$(date +'%Y-%m-%d-%H-%M')" -m "Deployed to production"
          git push origin --tags

      # STEP 6: Success notification
      - name: Notify on success
        if: success()
        run: echo "✅ Deployment to production successful!"

      # STEP 7: Failure notification
      - name: Notify on failure
        if: failure()
        run: echo "❌ Deployment to production failed!"
